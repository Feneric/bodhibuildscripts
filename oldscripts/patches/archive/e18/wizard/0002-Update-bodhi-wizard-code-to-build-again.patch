From 2170970e01c0174990b7c30dfadd025af3d4ccc8 Mon Sep 17 00:00:00 2001
From: Chris Michael <devilhorns@comcast.net>
Date: Mon, 25 Nov 2013 16:15:10 +0000
Subject: [PATCH 2/2] Update bodhi wizard code to build again ;)

Signed-off-by: Chris Michael <devilhorns@comcast.net>
---
 src/modules/wizard/page_000.c |  61 ++++-----
 src/modules/wizard/page_020.c | 121 ++++++++++-------
 src/modules/wizard/page_025.c | 122 +++++++++++++++++
 src/modules/wizard/page_080.c | 300 +++++++++++++++++++++++++++++++++++-------
 src/modules/wizard/page_200.c |   8 +-
 5 files changed, 473 insertions(+), 139 deletions(-)
 create mode 100644 src/modules/wizard/page_025.c

diff --git a/src/modules/wizard/page_000.c b/src/modules/wizard/page_000.c
index 4727c20..829ba86 100644
--- a/src/modules/wizard/page_000.c
+++ b/src/modules/wizard/page_000.c
@@ -1,59 +1,46 @@
-/* Splash Screen */
-
 #include "e_wizard.h"
 
-static Ecore_Timer *_next_timer = NULL;
+/* local function prototypes */
+static Eina_Bool _cb_next_page(void *data __UNUSED__);
 
-/*
-EAPI int
-wizard_page_init(E_Wizard_Page *pg __UNUSED__, Eina_Bool *need_xdg_desktops __UNUSED__, Eina_Bool *need_xdg_icons __UNUSED__)
+EAPI int 
+wizard_page_init(E_Wizard_Page *pg __UNUSED__) 
 {
    return 1;
 }
 
-EAPI int
-wizard_page_shutdown(E_Wizard_Page *pg __UNUSED__)
+EAPI int 
+wizard_page_shutdown(E_Wizard_Page *pg __UNUSED__) 
 {
    return 1;
 }
-*/
-static Eina_Bool
-_next_page(void *data __UNUSED__)
-{
-   _next_timer = NULL;
-   e_wizard_button_next_enable_set(1);
-   e_wizard_next();
-   return ECORE_CALLBACK_CANCEL;
-}
 
-EAPI int
-wizard_page_show(E_Wizard_Page *pg __UNUSED__)
+EAPI int 
+wizard_page_show(E_Wizard_Page *pg __UNUSED__) 
 {
-   Evas_Object *o;
-
-   e_wizard_title_set(_("Enlightenment"));
+   e_wizard_title_set(_("Bodhi Linux"));
    e_wizard_button_next_enable_set(0);
-   o = edje_object_add(pg->evas);
-   e_theme_edje_object_set(o, "base/theme/wizard", "e/wizard/firstpage");
-   e_wizard_page_show(o);
-
-   /* advance in 1 sec */
-   if (!_next_timer)
-     _next_timer = ecore_timer_add(1.0, _next_page, NULL);
+   ecore_timer_add(2.0, _cb_next_page, NULL);
    return 1;
 }
 
-EAPI int
-wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
+EAPI int 
+wizard_page_hide(E_Wizard_Page *pg __UNUSED__) 
 {
-   if (_next_timer) ecore_timer_del(_next_timer);
-   _next_timer = NULL;
    return 1;
 }
-/*
-EAPI int
-wizard_page_apply(E_Wizard_Page *pg __UNUSED__)
+
+EAPI int 
+wizard_page_apply(E_Wizard_Page *pg __UNUSED__) 
 {
    return 1;
 }
-*/
+
+/* local function prototypes */
+static Eina_Bool 
+_cb_next_page(void *data __UNUSED__) 
+{
+   e_wizard_button_next_enable_set(EINA_TRUE);
+   e_wizard_next();
+   return ECORE_CALLBACK_CANCEL;
+}
diff --git a/src/modules/wizard/page_020.c b/src/modules/wizard/page_020.c
index 9a6f470..cde67eb 100644
--- a/src/modules/wizard/page_020.c
+++ b/src/modules/wizard/page_020.c
@@ -3,16 +3,22 @@
 
 static const char *profile = NULL;
 static Evas_Object *textblock = NULL;
+static Evas_Object *o_preview = NULL;
 
 static void
 _profile_change(void *data __UNUSED__, Evas_Object *obj __UNUSED__)
 {
    char buf[PATH_MAX];
-   char *dir;
+   const char *dir;
    Efreet_Desktop *desk = NULL;
 
    e_prefix_data_snprintf(buf, sizeof(buf), "data/config/%s", profile);
-   dir = strdupa(buf);
+   dir = strdup(buf);
+   if (!dir)
+     {
+	e_widget_textblock_markup_set(textblock, _("Unknown"));
+	return;
+     }
    snprintf(buf, sizeof(buf), "%s/profile.desktop", dir);
    desk = efreet_desktop_new(buf);
    if (desk)
@@ -23,12 +29,18 @@ _profile_change(void *data __UNUSED__, Evas_Object *obj __UNUSED__)
    else
      e_widget_textblock_markup_set(textblock, _("Unknown"));
 
+   snprintf(buf, sizeof(buf), "%s/screenshot.png", dir);
+   if (ecore_file_exists(buf))
+     e_widget_preview_file_set(o_preview, buf, NULL);
+   else
+     e_widget_preview_file_set(o_preview, NULL, NULL);
+
    // enable next once you choose a profile
    e_wizard_button_next_enable_set(1);
 }
-/*
+
 EAPI int
-wizard_page_init(E_Wizard_Page *pg __UNUSED__, Eina_Bool *need_xdg_desktops __UNUSED__, Eina_Bool *need_xdg_icons __UNUSED__)
+wizard_page_init(E_Wizard_Page *pg __UNUSED__)
 {
    return 1;
 }
@@ -38,21 +50,22 @@ wizard_page_shutdown(E_Wizard_Page *pg __UNUSED__)
 {
    return 1;
 }
-*/
+
 EAPI int
 wizard_page_show(E_Wizard_Page *pg)
 {
-   Evas_Object *o, *of, *ob;
+   Evas_Object *o, *of, *ob, *ow, *oa;
    Eina_List *l, *profiles;
    int i, sel = -1;
    Evas_Object *ilist;
+   char buf[PATH_MAX];
 
    o = e_widget_list_add(pg->evas, 1, 0);
    e_wizard_title_set(_("Profile"));
    of = e_widget_framelist_add(pg->evas, _("Select one"), 0);
-
+   
    ob = e_widget_ilist_add(pg->evas, 32 * e_scale, 32 * e_scale, &profile);
-   e_widget_size_min_set(ob, 140 * e_scale, 70 * e_scale);
+   e_widget_size_min_set(ob, 120 * e_scale, 50 * e_scale);
    ilist = ob;
    e_widget_on_change_hook_set(ob, _profile_change, NULL);
 
@@ -62,45 +75,45 @@ wizard_page_show(E_Wizard_Page *pg)
    for (i = 0, l = profiles; l; l = l->next, i++)
      {
         Efreet_Desktop *desk = NULL;
-        char buf[PATH_MAX], *prof;
-        const char *label, *dir;
-        Evas_Object *ic;
-
-        prof = l->data;
-        if (e_config_profile_get())
-          {
-             if (!strcmp(prof, e_config_profile_get()))
-               {
-                  free(prof);
-                  continue;
-               }
-          }
-        e_prefix_data_snprintf(buf, sizeof(buf), "data/config/%s", prof);
-        // if it's not a system profile - don't offer it
-        if (!ecore_file_is_dir(buf))
-          {
-             free(prof);
-             continue;
-          }
-        dir = strdupa(buf);
+	char *prof;
+	const char *label, *dir;
+	Evas_Object *ic;
+
+	prof = l->data;
+	if (e_config_profile_get())
+	  {
+	     if (!strcmp(prof, e_config_profile_get()))
+	       {
+		  free(prof);
+		  continue;
+	       }
+	  }
+	e_prefix_data_snprintf(buf, sizeof(buf), "data/config/%s", prof);
+	// if it's not a system profile - don't offer it
+	if (!ecore_file_is_dir(buf))
+	  {
+	     free(prof);
+	     continue;
+	  }
+	dir = strdup(buf);
+	if (!dir)
+	  {
+	     free(prof);
+	     continue;
+	  }
         if (!strcmp(prof, "standard")) sel = i;
-        snprintf(buf, sizeof(buf), "%s/profile.desktop", dir);
+	snprintf(buf, sizeof(buf), "%s/profile.desktop", dir);
         desk = efreet_desktop_new(buf);
-        label = prof;
-        if ((desk) && (desk->name)) label = desk->name;
-        snprintf(buf, sizeof(buf), "%s/icon.edj", dir);
-        if ((desk) && (desk->icon))
-          {
-             if (eina_str_has_extension(desk->icon, "png"))
-               snprintf(buf, sizeof(buf), "%s/%s", dir, desk->icon);
-             else
-               snprintf(buf, sizeof(buf), "%s/%s.png", dir, desk->icon);
-          }
-        else
-          e_prefix_data_concat_static(buf, "data/images/enlightenment.png");
-        ic = e_util_icon_add(buf, pg->evas);
-        e_widget_ilist_append(ob, ic, label, NULL, NULL, prof);
-        free(prof);
+	label = prof;
+	if ((desk) && (desk->name)) label = desk->name;
+	snprintf(buf, sizeof(buf), "%s/icon.edj", dir);
+	if ((desk) && (desk->icon))
+	  snprintf(buf, sizeof(buf), "%s/%s", dir, desk->icon);
+	else
+	  e_prefix_data_concat_static(buf, "data/images/enlightenment.png");
+	ic = e_util_icon_add(buf, pg->evas);
+	e_widget_ilist_append(ob, ic, label, NULL, NULL, prof);
+	free(prof);
         if (desk) efreet_desktop_free(desk);
      }
    if (profiles) eina_list_free(profiles);
@@ -117,14 +130,21 @@ wizard_page_show(E_Wizard_Page *pg)
 
    e_widget_framelist_object_append(of, ob);
 
+   /* Add screenshot previews */
+   oa = e_widget_aspect_add(pg->evas, 320 * e_scale, 200 * e_scale);
+   ow = e_widget_preview_add(pg->evas, 320 * e_scale, 200 * e_scale);
+   o_preview = ow;
+   /* e_widget_size_min_set(ow, mw, mh); */
+   e_widget_aspect_child_set(oa, ow);
+   evas_object_show(o_preview);
+   e_widget_framelist_object_append(of, oa);
+
    e_widget_list_object_append(o, of, 1, 1, 0.5);
 
    if (sel >= 0) e_widget_ilist_selected_set(ilist, sel);
 
    evas_object_show(ob);
    evas_object_show(of);
-   e_wizard_page_show(o);
-//   pg->data = o;
    e_wizard_button_next_enable_set(0);
    return 1; /* 1 == show ui, and wait for user, 0 == just continue */
 }
@@ -132,8 +152,8 @@ wizard_page_show(E_Wizard_Page *pg)
 EAPI int
 wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
 {
-//   evas_object_del(pg->data);
-// actually apply profile
+   //evas_object_del(pg->data);
+   // actually apply profile
    if (!profile) profile = "standard";
    e_config_profile_set(profile);
    e_config_profile_del(e_config_profile_get());
@@ -141,10 +161,9 @@ wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
    e_config_save();
    return 1;
 }
-/*
+
 EAPI int
 wizard_page_apply(E_Wizard_Page *pg __UNUSED__)
 {
    return 1;
 }
-*/
diff --git a/src/modules/wizard/page_025.c b/src/modules/wizard/page_025.c
new file mode 100644
index 0000000..b560784
--- /dev/null
+++ b/src/modules/wizard/page_025.c
@@ -0,0 +1,122 @@
+/*Theme Chooser*/
+#include "e_wizard.h"
+
+static const char *theme = NULL;
+
+static void
+_theme_change(void *data, Evas_Object *obj, void *event_info __UNUSED__)
+{
+   Eina_List *selected;
+   E_Fm2_Icon_Info *ici;
+   Evas_Object *o = data;
+   const char *rpath;
+   char buf[4096];
+
+   if (!(selected = e_widget_flist_selected_list_get(obj))) return;
+
+   ici = selected->data;
+   rpath = e_widget_flist_real_path_get(obj);
+
+   if (!strcmp(rpath, "/"))
+     snprintf(buf, sizeof(buf), "/%s", ici->file);
+   else
+     snprintf(buf, sizeof(buf), "%s/%s", rpath, ici->file);
+   eina_list_free(selected);
+
+   if (ecore_file_is_dir(buf) || !ecore_file_exists(buf)) return;
+
+   if (theme)
+     eina_stringshare_del(theme);
+   theme = eina_stringshare_add(buf);
+   e_widget_preview_edje_set(o, theme, "e/desktop/background");
+   e_wizard_button_next_enable_set(1);  
+}
+
+EAPI int
+wizard_page_init(E_Wizard_Page *pg __UNUSED__)
+{
+   return 1;
+}
+
+EAPI int
+wizard_page_shutdown(E_Wizard_Page *pg __UNUSED__)
+{
+   eina_stringshare_del(theme);
+   return 1;
+}
+
+EAPI int
+wizard_page_show(E_Wizard_Page *pg)
+{
+   Evas_Object *o, *of, *oa, *ob, *oc;
+   char path[4096];
+
+   o = e_widget_list_add(pg->evas, 1, 0);
+   e_wizard_title_set(_("Theme"));
+   
+   of = e_widget_framelist_add(pg->evas, _("Choose A Theme"), 0);
+   
+   e_prefix_data_concat_static(path, "data/themes");
+
+   ob = e_widget_flist_add(pg->evas);
+   e_widget_size_min_set(ob, 140 * e_scale, 70 * e_scale);
+   e_widget_flist_path_set(ob, path, "/");
+   e_widget_framelist_object_append(of, ob);
+   
+   oa = e_widget_aspect_add(pg->evas, 280 * e_scale, 200 * e_scale);
+   oc = e_widget_preview_add(pg->evas, 280 * e_scale, 200 * e_scale);
+   e_widget_aspect_child_set(oa, oc);
+   e_widget_framelist_object_append(of, oa);
+
+   evas_object_smart_callback_add(ob, "selection_change", _theme_change, oc);
+
+   e_widget_list_object_append(o, of, 1, 1, 0.5);
+
+   evas_object_resize(oa, 140 * e_scale, 70 * e_scale);
+   evas_object_show(oc);
+   evas_object_show(oa);
+   evas_object_show(ob);
+   evas_object_show(of);
+   e_wizard_page_show(o);
+   e_wizard_button_next_enable_set(0);
+
+   return 1;
+}
+
+EAPI int
+wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
+{
+   const char *f;
+   char *name;
+
+   f = ecore_file_file_get(theme);
+   if ((name = ecore_file_strip_ext(f)))
+     {
+        E_Action *a;
+        const char *elm_theme = elm_theme_get(NULL);
+        
+        if ((elm_theme) && (!strcmp(name, elm_theme)))
+          {
+             free(name);
+             if (theme) eina_stringshare_del(theme);
+             return 1;
+          }
+
+        elm_theme_set(NULL, name);
+        elm_config_all_flush();
+        elm_config_save();
+        free(name);
+        a = e_action_find("restart");
+        if ((a) && (a->func.go)) a->func.go(NULL, NULL);
+     }
+
+   if (theme) eina_stringshare_del(theme);
+   return 1;
+}
+
+EAPI int
+wizard_page_apply(E_Wizard_Page *pg __UNUSED__)
+{
+   // no need. done in page_070's wizard_page_show()
+   return 1;
+}
diff --git a/src/modules/wizard/page_080.c b/src/modules/wizard/page_080.c
index efb9ae2..a76e7f7 100644
--- a/src/modules/wizard/page_080.c
+++ b/src/modules/wizard/page_080.c
@@ -1,76 +1,286 @@
-/* Ibar setup */
+/* Quick launch chooser */
 #include "e_wizard.h"
 
+static void _write_bodhi_desktops(void);
+static void _write_user_desktops(void);
+
+static Eina_List *desktops = NULL;
+static int *desktops_add = NULL;
+static int desktops_num = 0;
+
+static void 
+_write_bodhi_desktops(void) 
+{
+   FILE *f;
+   char buf[PATH_MAX];
+
+   e_user_dir_concat_static(buf, "applications/bar/default");
+   ecore_file_mkpath(buf);
+   e_user_dir_concat_static(buf, "applications/bar/default/.order");
+   f = fopen(buf, "w");
+   if (f) 
+     {
+        fprintf(f, "midori.desktop\n");
+        fprintf(f, "pcmanfm.desktop\n");
+        fprintf(f, "ubiquity-gtkui.desktop\n");
+        fprintf(f, "lxterminal.desktop\n");
+        fclose(f);
+     }
+
+   FILE *g;
+   char bam[PATH_MAX];
+
+   e_user_dir_concat_static(bam, "applications/bar/engage");
+   ecore_file_mkpath(bam);
+   e_user_dir_concat_static(bam, "applications/bar/engage/.order");
+   g = fopen(bam, "w");
+   if (g) 
+     {
+        fprintf(g, "midori.desktop\n");
+        fprintf(g, "pcmanfm.desktop\n");
+        fprintf(g, "ubiquity-gtkui.desktop\n");
+        fprintf(g, "lxterminal.desktop\n");
+        fclose(g);
+     }
+
+   FILE *h;
+   char bark[PATH_MAX];
+
+   e_user_dir_concat_static(bark, "applications/bar/tablet");
+   ecore_file_mkpath(bark);
+   e_user_dir_concat_static(bark, "applications/bar/tablet/.order");
+   h = fopen(bark, "w");
+   if (h) 
+     {
+        fprintf(h, "scale.desktop\n");
+        fprintf(h, "ubiquity-gtkui.desktop\n");
+        fclose(h);
+     }
+}
+
+static void 
+_write_user_desktops(void) 
+{
+   FILE *f;
+   char buf[PATH_MAX];
+
+   e_user_dir_concat_static(buf, "applications/bar/default");
+   ecore_file_mkpath(buf);
+   e_user_dir_concat_static(buf, "applications/bar/default/.order");
+   f = fopen(buf, "w");
+   if (f) 
+     {
+        fprintf(f, "midori.desktop\n");
+        fprintf(f, "pcmanfm.desktop\n");
+        fprintf(f, "lxterminal.desktop\n");
+        fclose(f);
+     }
+
+   FILE *g;
+   char bam[PATH_MAX];
+
+   e_user_dir_concat_static(bam, "applications/bar/engage");
+   ecore_file_mkpath(bam);
+   e_user_dir_concat_static(bam, "applications/bar/engage/.order");
+   g = fopen(bam, "w");
+   if (g) 
+     {
+        fprintf(g, "midori.desktop\n");
+        fprintf(g, "pcmanfm.desktop\n");
+        fprintf(g, "lxterminal.desktop\n");
+        fclose(g);
+     }
+
+   FILE *h;
+   char bark[PATH_MAX];
+
+   e_user_dir_concat_static(bark, "applications/bar/tablet");
+   ecore_file_mkpath(bark);
+   e_user_dir_concat_static(bark, "applications/bar/tablet/.order");
+   h = fopen(bark, "w");
+   if (h) 
+     {
+        fprintf(h, "scale.desktop\n");
+        fclose(h);
+     }
+}
+
+static int
+_cb_sort_desks(Efreet_Desktop *d1, Efreet_Desktop *d2)
+{
+   if (!d1->name) return 1;
+   if (!d2->name) return -1;
+   return strcmp(d1->name, d2->name);
+}
+
 EAPI int
-wizard_page_init(E_Wizard_Page *pg __UNUSED__, Eina_Bool *need_xdg_desktops, Eina_Bool *need_xdg_icons __UNUSED__)
+wizard_page_init(E_Wizard_Page *pg __UNUSED__)
 {
-   *need_xdg_desktops = EINA_TRUE;
+   Eina_List *desks = NULL;
+   Efreet_Desktop *desk;
+
+   desks = efreet_util_desktop_name_glob_list("*");
+   desks = eina_list_sort(desks, 0, (Eina_Compare_Cb)_cb_sort_desks);
+   EINA_LIST_FREE(desks, desk)
+     {
+        if (!desk->exec)
+          {
+             efreet_desktop_free(desk);
+             continue;
+          }
+        desktops = eina_list_append(desktops, desk);
+     }
+   if (desktops)
+     {
+        desktops_num = eina_list_count(desktops);
+        desktops_add = calloc(sizeof(int), desktops_num);
+     }
    return 1;
 }
-/*
+
 EAPI int
 wizard_page_shutdown(E_Wizard_Page *pg __UNUSED__)
 {
+   Efreet_Desktop *desk;
+
+   EINA_LIST_FREE(desktops, desk)
+     efreet_desktop_free(desk);
+
+   if (desktops_add)
+     {
+        free(desktops_add);
+        desktops_add = NULL;
+     }
+   desktops_num = 0;
    return 1;
 }
-*/
+
 EAPI int
 wizard_page_show(E_Wizard_Page *pg __UNUSED__)
 {
-   FILE *f, *fin;
+   Evas_Object *o, *of, *ob, *li, *ck;
+   Evas_Coord mw, mh;
+   Eina_List *l;
+   int i;
+   struct passwd *pw;
+   char *usr;
+
+   pw = getpwuid(getuid());
+   usr = pw->pw_name;
+   if ((usr) && (!strcmp(usr, "bodhi"))) 
+     return 0;
+   else if (usr)
+     return 0;
+
+   if (!desktops) return 0;
+
+   o = e_widget_list_add(pg->evas, 1, 0);
+   e_wizard_title_set(_("Quick Launch"));
+   
+   of = e_widget_framelist_add(pg->evas, _("Select Applications"), 0);
+
+   li = e_widget_list_add(pg->evas, 1, 0);
+   ob = e_widget_scrollframe_simple_add(pg->evas, li);
+   e_widget_size_min_set(ob, 140 * e_scale, 140 * e_scale);
+
+   for (i = 0, l = desktops; l ; l = l->next, i++)
+     {
+        Efreet_Desktop *desk;
+        const char *icon;
+        
+        desk = l->data;
+        icon = NULL;
+        if (desk->icon)
+          icon = efreet_icon_path_find(e_config->icon_theme, 
+                                       desk->icon, 48);
+        ck = e_widget_check_icon_add(pg->evas, desk->name, 
+                                     icon, 32 * e_scale, 32 * e_scale,
+                                     &(desktops_add[i]));
+        e_widget_list_object_append(li, ck, 1, 1, 0.0);
+        evas_object_show(ck);
+     }
+
+   e_widget_size_min_get(li, &mw, &mh);
+   evas_object_resize(li, mw, mh);
+   
+   e_widget_framelist_object_append(of, ob);
+   e_widget_list_object_append(o, of, 1, 1, 0.5);
+   evas_object_show(ob);
+   evas_object_show(of);
+   evas_object_show(li);
+   
+   e_wizard_page_show(o);
+
+   return 1; /* 1 == show ui, and wait for user, 0 == just continue */
+}
+
+EAPI int
+wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
+{
+   return 1;
+}
+
+EAPI int
+wizard_page_apply(E_Wizard_Page *pg __UNUSED__)
+{
+   Efreet_Desktop *desk;
+   Eina_List *l;
+   int i;
+   FILE *f;
    char buf[PATH_MAX];
+   struct passwd *pw;
+   char *usr;
+
+   pw = getpwuid(getuid());
+   usr = pw->pw_name;
+   if (usr) 
+     {
+        if (!strcmp(usr, "bodhi"))
+          _write_bodhi_desktops();
+        else
+          _write_user_desktops();
+
+        EINA_LIST_FREE(desktops, desk)
+          efreet_desktop_free(desk);
+
+        if (desktops_add)
+          {
+             free(desktops_add);
+             desktops_add = NULL;
+          }
+        desktops_num = 0;
+        return 1;
+     }
 
-   snprintf(buf, sizeof(buf), "%s/def-ibar.txt", e_wizard_dir_get());
-   fin = fopen(buf, "r");
-   if (!fin) return 0;
    e_user_dir_concat_static(buf, "applications/bar/default");
    ecore_file_mkpath(buf);
    e_user_dir_concat_static(buf, "applications/bar/default/.order");
    f = fopen(buf, "w");
    if (f)
      {
-        while (fgets(buf, sizeof(buf), fin))
+        for (i = 0, l = desktops; l ; l = l->next, i++)
           {
-             Efreet_Desktop *desk;
-             char name[4096], buf2[PATH_MAX], *p;
-             int n;
-
-             if (buf[0] == '#') continue;
-             p = buf;
-             while (isspace(*p))
-               p++;
-             for (;; )
+             if (desktops_add[i])
                {
-                  n = sscanf(p, "%s", name);
-                  if (n != 1) break;
-                  p += strlen(name);
-                  while (isspace(*p))
-                    p++;
-                  snprintf(buf2, sizeof(buf2), "%s.desktop", name);
-                  desk = efreet_util_desktop_file_id_find(buf2);
-                  if (desk)
-                    {
-                       fprintf(f, "%s\n", buf2);
-                       efreet_desktop_free(desk);
-                       break;
-                    }
+                  char *p;
+                  
+                  desk = l->data;
+                  p = strrchr(desk->orig_path, '/');
+                  if (!p) p = desk->orig_path;
+                  else p++;
+                  fprintf(f, "%s\n", p);
                }
           }
         fclose(f);
      }
-   fclose(fin);
-   return 0; /* 1 == show ui, and wait for user, 0 == just continue */
-}
-/*
-EAPI int
-wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
-{
-   return 1;
-}
+   EINA_LIST_FREE(desktops, desk)
+     efreet_desktop_free(desk);
 
-EAPI int
-wizard_page_apply(E_Wizard_Page *pg __UNUSED__)
-{
+   if (desktops_add)
+     {
+        free(desktops_add);
+        desktops_add = NULL;
+     }
+   desktops_num = 0;
    return 1;
 }
-*/
diff --git a/src/modules/wizard/page_200.c b/src/modules/wizard/page_200.c
index cdfbd52..b8965b7 100644
--- a/src/modules/wizard/page_200.c
+++ b/src/modules/wizard/page_200.c
@@ -1,9 +1,8 @@
 /* Delete previous copy of config profile and save new one */
 #include "e_wizard.h"
 
-#if 0
 EAPI int
-wizard_page_init(E_Wizard_Page *pg __UNUSED__, Eina_Bool *need_xdg_desktops __UNUSED__, Eina_Bool *need_xdg_icons __UNUSED__)
+wizard_page_init(E_Wizard_Page *pg __UNUSED__)
 {
    return 1;
 }
@@ -25,16 +24,13 @@ wizard_page_hide(E_Wizard_Page *pg __UNUSED__)
 {
    return 1;
 }
-#endif
+
 EAPI int
 wizard_page_apply(E_Wizard_Page *pg __UNUSED__)
 {
    // save the config now everyone has modified it
    e_config_save();
-   // diusable restart env so we actually start a whole new session properly
-   e_util_env_set("E_RESTART", NULL);
    // restart e
    e_sys_action_do(E_SYS_RESTART, NULL);
    return 1;
 }
-
-- 
1.8.1.5

